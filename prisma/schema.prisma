// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum ProblemDifficultyLevel {
  EASY
  MEDIUM
  HARD
}

model User {
  id                       String    @id @default(cuid())
  username                 String    @unique
  password                 String
  email                    String    @unique
  name                     String
  image                    String?
  role                     UserRole  @default(USER)
  isVerified               Boolean   @default(false)
  verificationToken        String?
  verificationTokenExpiry  DateTime?
  refreshToken             String?
  refreshTokenExpiry       DateTime?
  passwordResetToken       String?
  passwordResetTokenExpiry DateTime?
  accessToken              String?
  accessTokenExpiry        String?
  createdAt                DateTime  @default(now())
  updatedAt                DateTime  @default(now())

  problems Problem[]
}

model Problem {
  id          String                 @id @default(cuid())
  title       String
  description String
  difficulty  ProblemDifficultyLevel
  tags        String[]
  userId      String
  examples    Json
  constraints String
  hints       String?
  editorial   String?

  testcases         Json
  codeSnippets      Json
  referenceSolution Json

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
